function create(arr = [[""]], lv = 0) {
    let lenX = arr.length;
    let lenY = arr[0].length;
    for (let i = 0; i < lenX; i++) {
        for (let j = 0; j < lenY; j++) {
            if (arr[i][j] == "W") {
                blocks.place(COBBLESTONE, pos(i + 1, lv, j));
            }
            else if (arr[i][j] == "R") {
                blocks.place(WATER, pos(i - 3, lv, j - 4));
            }
            else if (arr[i][j] == "RB") {
                blocks.place(ROSE_BUSH, pos(i - 3, lv + 1, j - 4));
            }
            else if (arr[i][j] == "B") {
                blocks.place(WOODEN_TRAPDOOR, pos(i - 3, lv + 1, j - 4));
            }
            else if (arr[i][j] == "A") {
                for (let k = 0; k < 4; k++) {
                    blocks.place(AIR, pos(i - 3, lv + 1 + k, j - 4));
                }
            }
            else if (arr[i][j] == "I") {
                for (let k = 0; k < 4; k++) {
                    blocks.place(AIR, pos(i - 3, lv + 1 + k, j - 4));
                }
                for (let k = 2; k < 4; k++) {
                    blocks.place(IRON_BARS, pos(i - 3, lv + 1 + k, j - 4));
                }
            }
            if (arr[i][j] == "T") {
                blocks.place(COBBLESTONE, pos(i, lv, j - 1));
            }
            if (arr[i][j] == "I2") {
                blocks.place(IRON_BARS, pos(i, lv, j - 1));
            }
            if (arr[i][j] == "T2") {
                blocks.place(STRIPPED_DARK_OAK_WOOD, pos(i, lv, j - 1));
            }
            if (arr[i][j] == "I3") {
                blocks.place(IRON_BARS, pos(i, lv, j - 1));
            }
            if (arr[i][j] == "RT") {
                blocks.place(REDSTONE_TORCH, pos(i, lv, j - 1));
            }
            if (arr[i][j] == "F") {
                blocks.place(BROWN_CARPET, pos(i + 1, lv, j));
            }
            if (arr[i][j] == "S") {
                blocks.place(STRIPPED_DARK_OAK_WOOD, pos(i + 1, lv, j));
            }
            if (arr[i][j] == "S2") {
                blocks.place(STRIPPED_DARK_OAK_WOOD, pos(i + 1, lv, j));
            }
            if (arr[i][j] == "S3") {
                blocks.place(STRIPPED_DARK_OAK_WOOD, pos(i + 1, lv, j));
            }
            if (arr[i][j] == "S4") {
                blocks.place(STRIPPED_DARK_OAK_WOOD, pos(i + 1, lv, j));
            }
            if (arr[i][j] == "K") {
                blocks.place(GLASS, pos(i + 1, lv, j));
            }
        }
    }
}

let walls_base = [
    ["W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W"], // 0
    ["W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W"], // 1
    ["W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W"], // 2
    ["W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W"], // 4
    ["W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W"], // 5
    ["W", "W", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "W", "W"], // 6
    ["W", "W", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "W", "W"], // 7
    ["W", "W", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "W", "W"], // 8
    ["W", "W", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "W", "W"], // 9
    ["W", "W", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "W", "W"], // 10
    ["W", "W", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "W", "W"], // 11
    ["W", "W", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "W", "W"], // 12
    ["W", "W", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "W", "W"], // 13
    ["W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W"], // 14
    ["W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W", "W"], // 15
];

let river_base = [
    ["R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R"],  // 0
    ["R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R"],  // 1
    ["R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R"],  // 2
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 3
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 4
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 5
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 6
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 7
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 8
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 9
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 10
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 11
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 12
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 13
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 14
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 15
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 16
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", "A", "A", "A", "A", "A", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 17
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", "I", "I", "I", "I", "I", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 18
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", " ", "B", "B", "B", "B", "B", " ", " ", " ", " ", " ", " ", " ", "R", "R", "R"],  // 19
    ["R", "R", "R", " ", " ", " ", " ", " ", " ", "RB", "B", "B", "B", "B", "B", "RB", " ", " ", " ", " ", " ", " ", "R", "R", "R"],// 20
    ["R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "B", "B", "B", "B", "B", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R"],  // 21
    ["R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "B", "B", "B", "B", "B", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R"],  // 22
    ["R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "B", "B", "B", "B", "B", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R"],  // 23
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "B", "B", "B", "B", "B", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],  // 24
];

let towers_base = [
    ["T", "T", "T", "T", "T", "T", " ", " ", " ", " ", " ", " ", " ", "T", "T", "T", "T", "T", "T"],        // 0
    ["T", "T", "T", "T", "T", "T", "I2", "I2", "I2", "I2", "I2", "I2", "I2", "T", "T", "T", "T", "T", "T"], // 1
    ["T", "T", "T", "T", "T", "T", " ", " ", " ", " ", " ", " ", " ", "T", "T", "T", "T", "T", "T"],        // 2
    ["T", "T", "T", "T", "T", "T", " ", " ", " ", " ", " ", " ", " ", "T", "T", "T", "T", "T", "T"],        // 3
    ["T", "T", "T", "T", "T", "T", " ", " ", " ", " ", " ", " ", " ", "T", "T", "T", "T", "T", "T"],        // 4
    ["T", "T", "T", "T", "T", "T", " ", " ", " ", " ", " ", " ", " ", "T", "T", "T", "T", "T", "T"],        // 5
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],        // 6
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],        // 7
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],        // 8
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],        // 9
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],        // 10
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],        // 11
    ["T", "T", "T", "T", "T", "T", " ", " ", " ", " ", " ", " ", " ", "T", "T", "T", "T", "T", "T"],        // 12
    ["T", "T", "T", "T", "T", "T", " ", " ", " ", " ", " ", " ", " ", "T", "T", "T", "T", "T", "T"],        // 13
    ["T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T"],        // 14
    ["T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T", "T"],        // 15
    ["T", "T", "T", "T", "T", "T", " ", " ", " ", " ", " ", " ", " ", "T", "T", "T", "T", "T", "T"],        // 16
    ["T", "T", "T", "T", "T", "T", " ", " ", " ", " ", " ", " ", " ", "T", "T", "T", "T", "T", "T"],        // 17
];

let towers_base_2 = [
    ["T2", "T2", "I3", "I3", "T2", "T2", " ", " ", " ", " ", " ", " ", " ", "T2", "T2", "I3", "I3", "T2", "T2"],    // 0
    ["T2", "T2", " ", " ", "T2", "T2", " ", " ", " ", " ", " ", " ", " ", "T2", "T2", " ", " ", "T2", "T2"],        // 1
    ["I3", " ", " ", " ", " ", "I3", " ", " ", " ", " ", " ", " ", " ", "I3", " ", " ", " ", " ", "I3"],            // 2
    ["I3", " ", " ", " ", " ", "I3", " ", " ", " ", " ", " ", " ", " ", "I3", " ", " ", " ", " ", "I3"],            // 3
    ["T2", "T2", " ", " ", "T2", "T2", " ", " ", " ", " ", " ", " ", " ", "T2", "T2", " ", " ", "T2", "T2"],        // 4
    ["T2", "T2", "I3", "I3", "T2", "T2", " ", " ", " ", " ", " ", " ", " ", "T2", "T2", "I3", "I3", "T2", "T2"],    // 5
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],                // 6
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],                // 7
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],                // 8
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],                // 9
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],                // 10
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],                // 11
    ["T2", "T2", "I3", "I3", "T2", "T2", " ", " ", " ", " ", " ", " ", " ", "T2", "T2", "I3", "I3", "T2", "T2"],    // 12
    ["T2", "T2", " ", " ", "T2", "T2", " ", " ", " ", " ", " ", " ", " ", "T2", "T2", " ", " ", "T2", "T2"],        // 13
    ["I3", " ", " ", " ", " ", "I3", " ", " ", " ", " ", " ", " ", " ", "I3", " ", " ", " ", " ", "I3"],            // 14
    ["I3", " ", " ", " ", " ", "I3", " ", " ", " ", " ", " ", " ", " ", "I3", " ", " ", " ", " ", "I3"],            // 15
    ["T2", "T2", " ", " ", "T2", "T2", " ", " ", " ", " ", " ", " ", " ", "T2", "T2", " ", " ", "T2", "T2"],        // 16
    ["T2", "T2", "I3", "I3", "T2", "T2", " ", " ", " ", " ", " ", " ", " ", "T2", "T2", "I3", "I3", "T2", "T2"],    // 17
];

let towers_base_3 = [
    ["RT", "RT", " ", " ", "RT", "RT", " ", " ", " ", " ", " ", " ", " ", "RT", "RT", " ", " ", "RT", "RT"],    // 0
    ["RT", "RT", " ", " ", "RT", "RT", " ", " ", " ", " ", " ", " ", " ", "RT", "RT", " ", " ", "RT", "RT"],    // 1
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],            // 2
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],            // 3
    ["RT", "RT", " ", " ", "RT", "RT", " ", " ", " ", " ", " ", " ", " ", "RT", "RT", " ", " ", "RT", "RT"],    // 4
    ["RT", "RT", " ", " ", "RT", "RT", " ", " ", " ", " ", " ", " ", " ", "RT", "RT", " ", " ", "RT", "RT"],    // 5
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],            // 6
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],            // 7
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],            // 8
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],            // 9
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],            // 10
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],            // 11
    ["RT", "RT", " ", " ", "RT", "RT", " ", " ", " ", " ", " ", " ", " ", "RT", "RT", " ", " ", "RT", "RT"],    // 12
    ["RT", "RT", " ", " ", "RT", "RT", " ", " ", " ", " ", " ", " ", " ", "RT", "RT", " ", " ", "RT", "RT"],    // 13
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],            // 14
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],            // 15
    ["RT", "RT", " ", " ", "RT", "RT", " ", " ", " ", " ", " ", " ", " ", "RT", "RT", " ", " ", "RT", "RT"],    // 16
    ["RT", "RT", " ", " ", "RT", "RT", " ", " ", " ", " ", " ", " ", " ", "RT", "RT", " ", " ", "RT", "RT"],    // 17
];


let floor_base = [
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 0
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 1
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 2
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 4
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 5
    [" ", " ", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", " ", " "], // 6
    [" ", " ", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", " ", " "], // 7
    [" ", " ", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", " ", " "], // 8
    [" ", " ", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", " ", " "], // 9
    [" ", " ", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", " ", " "], // 10
    [" ", " ", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", " ", " "], // 11
    [" ", " ", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", " ", " "], // 12
    [" ", " ", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", "F", " ", " "], // 13
    [" ", " ", " ", " ", " ", " ", "F", "F", "F", "F", "F", " ", " ", " ", " ", " ", " "], // 14
    [" ", " ", " ", " ", " ", " ", "F", "F", "F", "F", "F", " ", " ", " ", " ", " ", " "], // 15
];

let stairs_base = [
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 0
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 1
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 2
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 4
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 5
    [" ", " ", " ", " ", " ", " ", " ", "S", "S", "S", " ", " ", " ", " ", " ", " ", " "], // 6
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 7
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 8
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 9
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 10
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 11
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 12
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 13
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 14
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 15
];

let stairs_base_2 = [
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 0
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 1
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 2
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 4
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 5
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 6
    [" ", " ", " ", " ", " ", " ", " ", "S2", "S2", "S2", " ", " ", " ", " ", " ", " ", " "],   // 7
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 8
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 9
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 10
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 11
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 12
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 13
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 14
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 15
];

let stairs_base_3 = [
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 0
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 1
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 2
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 4
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 5
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 6
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 7
    [" ", " ", " ", " ", " ", " ", " ", "S3", "S3", "S3", " ", " ", " ", " ", " ", " ", " "],   // 8
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 9
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 10
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 11
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 12
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 13
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 14
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 15
];

let stairs_base_4 = [
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 0
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 1
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 2
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 4
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 5
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 6
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 7
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 8
    [" ", " ", " ", " ", " ", " ", " ", "S4", "S4", "S4", " ", " ", " ", " ", " ", " ", " "],   // 9
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 10
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 11
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 12
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 13
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 14
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "],      // 15
];

let windows_base = [
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 0
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 1
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 2
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 4
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 5
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 6
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 7
    ["K", "K", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "K", "K"], // 8
    ["K", "K", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", "K", "K"], // 9
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 10
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 11
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 12
    [" ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " ", " "], // 13
    [" ", " ", " ", "K", "K", " ", " ", " ", " ", " ", " ", " ", "K", "K", " ", " ", " "], // 14
    [" ", " ", " ", "K", "K", " ", " ", " ", " ", " ", " ", " ", "K", "K", " ", " ", " "], // 15
];


player.onChat("run", function () {

    // create walls
    let castle_height = 4
    for (let i = 0; i < castle_height; i++) {
        create(walls_base, i);
    }

    // create river, flowers, bridge and door
    create(river_base, -1);

    // create towers
    for (let i = castle_height; i < castle_height + 2; i++) {
        create(towers_base, i);
    }
    let tower_height = castle_height + 2
    for (let i = tower_height; i < tower_height + 2; i++) {
        create(towers_base_2, i);
    }
    create(towers_base_3, tower_height + 2);

    // create floor and stairs
    create(floor_base, 0);
    for (let i = 0; i < castle_height; i++) {
        create(stairs_base, i);
    }
    for (let i = 0; i < castle_height - 1; i++) {
        create(stairs_base_2, i);
    }
    for (let i = 0; i < castle_height - 2; i++) {
        create(stairs_base_3, i);
    }
    for (let i = 0; i < castle_height - 3; i++) {
        create(stairs_base_4, i);
    }

    // create windows
    let windows_height = 1
    for (let i = windows_height; i < windows_height + 2; i++) {
        create(windows_base, i);
    }

})
